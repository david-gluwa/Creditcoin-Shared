// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Address.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Address.proto</summary>
public static partial class AddressReflection {

  #region Descriptor
  /// <summary>File descriptor for Address.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AddressReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1BZGRyZXNzLnByb3RvIk4KB0FkZHJlc3MSEgoKYmxvY2tjaGFpbhgBIAEo",
          "CRINCgV2YWx1ZRgCIAEoCRIPCgduZXR3b3JrGAMgASgJEg8KB3NpZ2hhc2gY",
          "BCABKAliBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Address), global::Address.Parser, new[]{ "Blockchain", "Value", "Network", "Sighash" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Address : pb::IMessage<Address> {
  private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Address> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AddressReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Address() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Address(Address other) : this() {
    blockchain_ = other.blockchain_;
    value_ = other.value_;
    network_ = other.network_;
    sighash_ = other.sighash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Address Clone() {
    return new Address(this);
  }

  /// <summary>Field number for the "blockchain" field.</summary>
  public const int BlockchainFieldNumber = 1;
  private string blockchain_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Blockchain {
    get { return blockchain_; }
    set {
      blockchain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private string value_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "network" field.</summary>
  public const int NetworkFieldNumber = 3;
  private string network_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Network {
    get { return network_; }
    set {
      network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sighash" field.</summary>
  public const int SighashFieldNumber = 4;
  private string sighash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Sighash {
    get { return sighash_; }
    set {
      sighash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Address);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Address other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Blockchain != other.Blockchain) return false;
    if (Value != other.Value) return false;
    if (Network != other.Network) return false;
    if (Sighash != other.Sighash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Blockchain.Length != 0) hash ^= Blockchain.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (Network.Length != 0) hash ^= Network.GetHashCode();
    if (Sighash.Length != 0) hash ^= Sighash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Blockchain.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Blockchain);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (Network.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Network);
    }
    if (Sighash.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Sighash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Blockchain.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Blockchain);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (Network.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
    }
    if (Sighash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Sighash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Address other) {
    if (other == null) {
      return;
    }
    if (other.Blockchain.Length != 0) {
      Blockchain = other.Blockchain;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    if (other.Network.Length != 0) {
      Network = other.Network;
    }
    if (other.Sighash.Length != 0) {
      Sighash = other.Sighash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Blockchain = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
        case 26: {
          Network = input.ReadString();
          break;
        }
        case 34: {
          Sighash = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
